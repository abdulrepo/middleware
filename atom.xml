<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Application Integration With IBM ESB]]></title>
  <link href="http://abdulrepo.github.io/middleware/atom.xml" rel="self"/>
  <link href="http://abdulrepo.github.io/middleware/"/>
  <updated>2014-07-10T23:16:55-04:00</updated>
  <id>http://abdulrepo.github.io/middleware/</id>
  <author>
    <name><![CDATA[Abdul @ Middleware]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Physical vs Logical Message]]></title>
    <link href="http://abdulrepo.github.io/middleware/blog/2014/07/09/physical-vs-logical-message/"/>
    <updated>2014-07-09T18:42:06-04:00</updated>
    <id>http://abdulrepo.github.io/middleware/blog/2014/07/09/physical-vs-logical-message</id>
    <content type="html"><![CDATA[<p>The difference between physical message and logical message is that physical message is something like XML and Cobol copybook or any text files. when physical data arrives at input node for example, input message queue, we have to configure the node property with appropriate parser like XMLNSC. This parser converts physical data to logical data which is understandable by the enterior nodes or embeded languages ESQL &amp; JAVA. Then these language can traverse logical tree message and do transformation as needed.</p>

<p><img src="https://s3.amazonaws.com/abjoy/pictures/mypictures/photo1.jpg" width="800" height="1200"></p>

<p>In our example the physical data is xml file which has account information with person first and last name. and the parser is XMLNSC configured on input queue node. then internally we can retrieve information starting by XMLNSC.Account.fname etc.</p>

<p>This project shows how to transform simple account information to a physical message but with different nodes.</p>

<p><img src="https://s3.amazonaws.com/abjoy/pictures/mypictures/pysical_vs_logical/pic4.jpeg" width="800" height="1200"></p>

<p>on the input node, we need to specify the parser &ldquo;XMLNS&rdquo;</p>

<p><img src="https://s3.amazonaws.com/abjoy/pictures/mypictures/pysical_vs_logical/pic1.jpeg" width="800" height="1200"></p>

<p>This shows logical representation of message as it traverses message flow</p>

<p><img src="https://s3.amazonaws.com/abjoy/pictures/mypictures/pysical_vs_logical/pic2.jpeg" width="800" height="1200"></p>

<p>Finally we get physcial transformed data</p>

<p><img src="https://s3.amazonaws.com/abjoy/pictures/mypictures/pysical_vs_logical/pic3.jpeg" width="800" height="1200"></p>

<p><a href="https://s3.amazonaws.com/abjoy/pictures/mypictures/pysical_vs_logical/AccountInfo.zip">download source code</a></p>

<script type="text/javascript" src="http://jd.revolvermaps.com/2/4.js?i=30hgo6osd91&amp;m=0&amp;h=160&amp;c=ff00ff&amp;r=40" async="async"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Basics of Message Broker Toolkit]]></title>
    <link href="http://abdulrepo.github.io/middleware/blog/2014/07/08/basics-of-message-broker-toolkit/"/>
    <updated>2014-07-08T22:35:12-04:00</updated>
    <id>http://abdulrepo.github.io/middleware/blog/2014/07/08/basics-of-message-broker-toolkit</id>
    <content type="html"><![CDATA[<p><img src="https://s3.amazonaws.com/abjoy/pictures/mypictures/wmbtoolkit.jpeg" width="800" height="1200"></p>

<ol>
<li><p>This is the side pane: in this pane we can create application, message flow, BAR files, message model, message set and etc</p></li>
<li><p>Is a section of the toolkit where we can choose different types of nodes to create message flow. for example, compute node, database node, filter node and etc.</p></li>
<li><p>Content pane: in this pane we build our message flow using nodes links and etc.</p></li>
<li><p>This pane contains one or more Broker instances, and one or more execution group.</p></li>
<li><p>In this pane we can set properties for the nodes, we can brows deployment logs and see some troubleshooting informations. test</p></li>
</ol>


<script type="text/javascript" src="http://jd.revolvermaps.com/2/4.js?i=30hgo6osd91&amp;m=0&amp;h=160&amp;c=ff00ff&amp;r=40" async="async"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ESQL Tips &amp; Tricks]]></title>
    <link href="http://abdulrepo.github.io/middleware/blog/2014/07/08/esql-tips-and-tricks/"/>
    <updated>2014-07-08T21:38:06-04:00</updated>
    <id>http://abdulrepo.github.io/middleware/blog/2014/07/08/esql-tips-and-tricks</id>
    <content type="html"><![CDATA[<p>Coming soon!</p>
]]></content>
  </entry>
  
</feed>
